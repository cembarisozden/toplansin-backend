{"version":3,"file":"authMiddleware.js","sourceRoot":"","sources":["../../src/middlewares/authMiddleware.ts"],"names":[],"mappings":";;;;;;AACA,gEAA+B;AAMxB,MAAM,iBAAiB,GAAG,CAC/B,GAAyB,EACzB,GAAa,EACb,IAAkB,EACZ,EAAE;IACR,MAAM,UAAU,GAAG,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC;IAC7C,MAAM,KAAK,GAAG,UAAU,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAExC,IAAI,CAAC,KAAK,EAAE,CAAC;QACX,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,mBAAmB,EAAE,CAAC,CAAC;QACvD,OAAO,CAAC,qCAAqC;IAC/C,CAAC;IAED,IAAI,CAAC;QACH,MAAM,OAAO,GAAG,sBAAG,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,UAAW,CAAC,CAAC;QAC3D,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC;QACnB,IAAI,EAAE,CAAC;IACT,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,iBAAiB,EAAE,CAAC,CAAC;IACvD,CAAC;AACH,CAAC,CAAC;AApBW,QAAA,iBAAiB,qBAoB5B","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nexport interface AuthenticatedRequest extends Request {\r\n  user?: any;\r\n}\r\n\r\nexport const authenticateToken = (\r\n  req: AuthenticatedRequest,\r\n  res: Response,\r\n  next: NextFunction\r\n): void => {\r\n  const authHeader = req.headers.authorization;\r\n  const token = authHeader?.split(\" \")[1];\r\n\r\n  if (!token) {\r\n    res.status(401).json({ message: \"Token bulunamadı.\" });\r\n    return; // return ile çık ki \"void\" sağlansın\r\n  }\r\n\r\n  try {\r\n    const decoded = jwt.verify(token, process.env.JWT_SECRET!);\r\n    req.user = decoded;\r\n    next();\r\n  } catch (err) {\r\n    res.status(403).json({ message: \"Geçersiz token.\" });\r\n  }\r\n};\r\n\r\n"]}