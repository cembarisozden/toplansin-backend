{"version":3,"file":"authorizeRoles.js","sourceRoot":"","sources":["../../src/middlewares/authorizeRoles.ts"],"names":[],"mappings":";;;AAEA,8DAA4D;AAC5D,iEAA8D;AAEvD,MAAM,cAAc,GAAG,CAAC,GAAG,YAAsB,EAAE,EAAE;IAC1D,OAAO,CAAC,GAAyB,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;QACtE,MAAM,QAAQ,GAAG,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;QAEhC,IAAI,CAAC,QAAQ,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;YAClD,IAAA,0BAAY,EAAC,GAAG,EAAC,+BAAc,CAAC,SAAS,EAAC;gBACxC,OAAO,EAAC,KAAK;gBACb,OAAO,EAAC,iCAAiC;aAC1C,CAAC,CAAC;QACL,CAAC;QACD,IAAI,EAAE,CAAC;IACT,CAAC,CAAC;AACJ,CAAC,CAAC;AAZW,QAAA,cAAc,kBAYzB","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\r\nimport { AuthenticatedRequest } from \"./authMiddleware\";\r\nimport { sendResponse } from \"../core/response/apiResponse\";\r\nimport { HttpStatusCode } from \"../core/enums/httpStatusCode\";\r\n\r\nexport const authorizeRoles = (...allowedRoles: string[]) => {\r\n  return (req: AuthenticatedRequest, res: Response, next: NextFunction) => {\r\n    const userRole = req.user?.role;\r\n\r\n    if (!userRole || !allowedRoles.includes(userRole)) {\r\n      sendResponse(res,HttpStatusCode.FORBIDDEN,{\r\n        success:false,\r\n        message:\"Bu i≈ülemi yapmaya yetkiniz yok.\",\r\n      });\r\n    }\r\n    next();\r\n  };\r\n};\r\n"]}