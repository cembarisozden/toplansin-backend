{"version":3,"file":"haliSahaController.js","sourceRoot":"","sources":["../../src/controllers/haliSahaController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\r\nimport { sendResponse } from \"../core/response/apiResponse\";\r\nimport { HttpStatusCode } from \"../core/enums/httpStatusCode\";\r\nimport { createHaliSahaSchema, updateHaliSahaSchema } from \"../validators/zodSchemas\";\r\nimport { prisma } from \"../lib/prisma\";\r\nimport { cacheOrFetch } from \"../utils/cache\";\r\nimport logger from \"../core/logger/logger\";   // ← logger’ı ekledik\r\n\r\nexport const createHaliSaha = async (req: Request, res: Response) => {\r\n  logger.info(\"createHaliSaha çağrıldı, body: %o\", req.body);\r\n\r\n  const result = createHaliSahaSchema.safeParse(req.body);\r\n  if (!result.success) {\r\n    logger.warn(\"createHaliSaha: Geçersiz veri – %s\", result.error.errors[0].message);\r\n    sendResponse(res, HttpStatusCode.BAD_REQUEST, {\r\n      success: false,\r\n      message: \"Geçersiz giriş verisi.\",\r\n      error: result.error.errors[0].message,\r\n    });\r\n    return;\r\n  }\r\n\r\n  const data = result.data;\r\n  try {\r\n    const haliSaha = await prisma.haliSaha.create({ data });\r\n    logger.info(\"createHaliSaha başarılı – id: %s\", haliSaha.id);\r\n    sendResponse(res, HttpStatusCode.CREATED, {\r\n      message: \"Halı saha başarıyla oluşturuldu.\",\r\n      data: haliSaha,\r\n    });\r\n    return;\r\n  } catch (error) {\r\n    logger.error(\"createHaliSaha hatası: %o\", error);\r\n    sendResponse(res, HttpStatusCode.INTERNAL_SERVER_ERROR, {\r\n      success: false,\r\n      message: \"Halı saha oluşturulamadı.\",\r\n    });\r\n    return;\r\n  }\r\n};\r\n\r\nexport const getAllHaliSahalar = async (req: Request, res: Response) => {\r\n  logger.info(\"getAllHaliSahalar çağrıldı\");\r\n\r\n  try {\r\n    const sahalar = await cacheOrFetch(\r\n      \"haliSahalar:all\",\r\n      60,\r\n      () => prisma.haliSaha.findMany()\r\n    );\r\n    logger.info(\"getAllHaliSahalar başarılı – count: %d\", sahalar.length);\r\n    sendResponse(res, HttpStatusCode.OK, { message: \"Başarılı\", data: sahalar });\r\n    return;\r\n  } catch (error) {\r\n    logger.error(\"getAllHaliSahalar hatası: %o\", error);\r\n    sendResponse(res, HttpStatusCode.INTERNAL_SERVER_ERROR, {\r\n      success: false,\r\n      message: \"Hata oluştu\",\r\n    });\r\n    return;\r\n  }\r\n};\r\n\r\nexport const getHaliSahaById = async (req: Request, res: Response) => {\r\n  const { id } = req.params;\r\n  logger.info(\"getHaliSahaById çağrıldı – id: %s\", id);\r\n\r\n  try {\r\n    const saha = await prisma.haliSaha.findUnique({ where: { id } });\r\n    if (!saha) {\r\n      logger.warn(\"getHaliSahaById: bulunamadı – id: %s\", id);\r\n      sendResponse(res, HttpStatusCode.NOT_FOUND, {\r\n        success: false,\r\n        message: \"Halı saha bulunamadı.\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    logger.info(\"getHaliSahaById başarılı – id: %s\", id);\r\n    sendResponse(res, HttpStatusCode.OK, { data: saha });\r\n    return;\r\n  } catch (error) {\r\n    logger.error(\"getHaliSahaById hatası: %o\", error);\r\n    sendResponse(res, HttpStatusCode.INTERNAL_SERVER_ERROR, {\r\n      success: false,\r\n      message: \"Halı sahaya erişilemedi.\",\r\n    });\r\n    return;\r\n  }\r\n};\r\n\r\nexport const updateHaliSaha = async (req: Request, res: Response) => {\r\n  const { id } = req.params;\r\n  logger.info(\"updateHaliSaha çağrıldı – id: %s, body: %o\", id, req.body);\r\n\r\n  const result = updateHaliSahaSchema.safeParse(req.body);\r\n  if (!result.success) {\r\n    logger.warn(\"updateHaliSaha: Geçersiz veri – %s\", result.error.errors[0].message);\r\n    sendResponse(res, HttpStatusCode.BAD_REQUEST, {\r\n      success: false,\r\n      message: \"Geçersiz giriş verisi.\",\r\n      error: result.error.errors[0].message,\r\n    });\r\n    return;\r\n  }\r\n\r\n  const updates = result.data;\r\n  try {\r\n    const updated = await prisma.haliSaha.update({\r\n      where: { id },\r\n      data: updates,\r\n    });\r\n    logger.info(\"updateHaliSaha başarılı – id: %s\", id);\r\n    sendResponse(res, HttpStatusCode.OK, {\r\n      message: \"Halı saha güncellendi.\",\r\n      data: updated,\r\n    });\r\n    return;\r\n  } catch (error) {\r\n    logger.error(\"updateHaliSaha hatası: %o\", error);\r\n    sendResponse(res, HttpStatusCode.INTERNAL_SERVER_ERROR, {\r\n      success: false,\r\n      message: \"Güncelleme sırasında hata oluştu.\",\r\n    });\r\n    return;\r\n  }\r\n};\r\n\r\nexport const deleteHaliSaha = async (req: Request, res: Response) => {\r\n  const { id } = req.params;\r\n  logger.info(\"deleteHaliSaha çağrıldı – id: %s\", id);\r\n\r\n  try {\r\n    await prisma.haliSaha.delete({ where: { id } });\r\n    logger.info(\"deleteHaliSaha başarılı – id: %s\", id);\r\n    sendResponse(res, HttpStatusCode.OK, {\r\n      message: \"Halı saha silindi.\",\r\n    });\r\n    return;\r\n  } catch (error) {\r\n    logger.error(\"deleteHaliSaha hatası: %o\", error);\r\n    sendResponse(res, HttpStatusCode.INTERNAL_SERVER_ERROR, {\r\n      success: false,\r\n      message: \"Silme sırasında hata oluştu.\",\r\n    });\r\n    return;\r\n  }\r\n};\r\n"]}