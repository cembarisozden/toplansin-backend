{"version":3,"file":"reservationController.js","sourceRoot":"","sources":["../../src/controllers/reservationController.ts"],"names":[],"mappings":";;;;;;AACA,iEAA8D;AAC9D,8DAA4D;AAC5D,yDAA4F;AAC5F,0CAAuC;AAEvC,mEAA2C,CAAC,YAAY;AAEjD,MAAM,iBAAiB,GAAG,KAAK,EAAE,GAAyB,EAAE,GAAa,EAAE,EAAE;IAClF,gBAAM,CAAC,IAAI,CAAC,uCAAuC,EAAE,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IAEnE,MAAM,MAAM,GAAG,oCAAuB,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC3D,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QACpB,gBAAM,CAAC,IAAI,CAAC,uCAAuC,EAAE,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QACrF,IAAA,0BAAY,EAAC,GAAG,EAAE,+BAAc,CAAC,WAAW,EAAE;YAC5C,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,8BAA8B;YACvC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO;SACtC,CAAC,CAAC;QACH,OAAO;IACT,CAAC;IAED,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;IACzB,IAAI,CAAC;QACH,MAAM,WAAW,GAAG,MAAM,eAAM,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;QAE9D,mBAAmB;QACnB,MAAM,iBAAiB,CAAC,WAAW,CAAC,UAAU,EAAE,WAAW,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;QACxF,gBAAM,CAAC,IAAI,CAAC,qCAAqC,EAAE,WAAW,CAAC,EAAE,CAAC,CAAC;QAEnE,IAAA,0BAAY,EAAC,GAAG,EAAE,+BAAc,CAAC,OAAO,EAAE;YACxC,OAAO,EAAE,oCAAoC;YAC7C,IAAI,EAAE,WAAW;SAClB,CAAC,CAAC;QACH,OAAO;IACT,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,gBAAM,CAAC,KAAK,CAAC,8BAA8B,EAAE,KAAK,CAAC,CAAC;QACpD,IAAA,0BAAY,EAAC,GAAG,EAAE,+BAAc,CAAC,qBAAqB,EAAE;YACtD,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,6BAA6B;SACvC,CAAC,CAAC;QACH,OAAO;IACT,CAAC;AACH,CAAC,CAAC;AAnCW,QAAA,iBAAiB,qBAmC5B;AAEK,MAAM,kBAAkB,GAAG,KAAK,EAAE,GAAyB,EAAE,GAAa,EAAE,EAAE;IACnF,gBAAM,CAAC,IAAI,CAAC,mDAAmD,EAAE,GAAG,CAAC,IAAI,EAAE,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC/F,MAAM,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC;IAC5B,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;IAE5B,IAAI,CAAC;QACH,IAAI,YAAY,CAAC;QAEjB,IAAI,IAAI,KAAK,MAAM,EAAE,CAAC;YACpB,YAAY,GAAG,MAAM,eAAM,CAAC,WAAW,CAAC,QAAQ,CAAC;gBAC/C,KAAK,EAAE,EAAE,MAAM,EAAE;gBACjB,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE;gBAC3B,OAAO,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE;aAC/B,CAAC,CAAC;QACL,CAAC;aAAM,IAAI,IAAI,KAAK,OAAO,EAAE,CAAC;YAC5B,YAAY,GAAG,MAAM,eAAM,CAAC,WAAW,CAAC,QAAQ,CAAC;gBAC/C,KAAK,EAAE,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE;gBACxC,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE;gBAC3B,OAAO,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE;aAC/B,CAAC,CAAC;QACL,CAAC;aAAM,IAAI,IAAI,KAAK,OAAO,EAAE,CAAC;YAC5B,YAAY,GAAG,MAAM,eAAM,CAAC,WAAW,CAAC,QAAQ,CAAC;gBAC/C,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE;gBAC3B,OAAO,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE;aAC/B,CAAC,CAAC;QACL,CAAC;aAAM,CAAC;YACN,gBAAM,CAAC,IAAI,CAAC,mDAAmD,EAAE,MAAM,CAAC,CAAC;YACzE,IAAA,0BAAY,EAAC,GAAG,EAAE,+BAAc,CAAC,SAAS,EAAE;gBAC1C,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,2CAA2C;aACrD,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QAED,gBAAM,CAAC,IAAI,CAAC,yCAAyC,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC;QAC5E,IAAA,0BAAY,EAAC,GAAG,EAAE,+BAAc,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC;QAC7D,OAAO;IACT,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,gBAAM,CAAC,KAAK,CAAC,+BAA+B,EAAE,KAAK,CAAC,CAAC;QACrD,IAAA,0BAAY,EAAC,GAAG,EAAE,+BAAc,CAAC,qBAAqB,EAAE;YACtD,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,8BAA8B;SACxC,CAAC,CAAC;QACH,OAAO;IACT,CAAC;AACH,CAAC,CAAC;AA7CW,QAAA,kBAAkB,sBA6C7B;AAEK,MAAM,kBAAkB,GAAG,KAAK,EAAE,GAAyB,EAAE,GAAa,EAAE,EAAE;IACnF,MAAM,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IAC1B,gBAAM,CAAC,IAAI,CAAC,iDAAiD,EAAE,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IACjF,MAAM,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC;IAC5B,MAAM,QAAQ,GAAG,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;IAEhC,IAAI,CAAC;QACH,MAAM,WAAW,GAAG,MAAM,eAAM,CAAC,WAAW,CAAC,UAAU,CAAC;YACtD,KAAK,EAAE,EAAE,EAAE,EAAE;YACb,OAAO,EAAE,EAAE,QAAQ,EAAE,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,EAAE;SACrD,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,EAAE,CAAC;YACjB,gBAAM,CAAC,IAAI,CAAC,yCAAyC,EAAE,EAAE,CAAC,CAAC;YAC3D,IAAA,0BAAY,EAAC,GAAG,EAAE,+BAAc,CAAC,SAAS,EAAE;gBAC1C,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,yBAAyB;aACnC,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QAED,MAAM,MAAM,GAAG,QAAQ,KAAK,MAAM,IAAI,WAAW,CAAC,MAAM,KAAK,MAAM,CAAC;QACpE,MAAM,OAAO,GAAG,QAAQ,KAAK,OAAO,IAAI,WAAW,CAAC,QAAQ,CAAC,OAAO,KAAK,MAAM,CAAC;QAChF,IAAI,CAAC,MAAM,IAAI,CAAC,OAAO,IAAI,QAAQ,KAAK,OAAO,EAAE,CAAC;YAChD,gBAAM,CAAC,IAAI,CAAC,iDAAiD,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;YAC3E,IAAA,0BAAY,EAAC,GAAG,EAAE,+BAAc,CAAC,SAAS,EAAE;gBAC1C,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,sCAAsC;aAChD,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QAED,gBAAM,CAAC,IAAI,CAAC,sCAAsC,EAAE,EAAE,CAAC,CAAC;QACxD,IAAA,0BAAY,EAAC,GAAG,EAAE,+BAAc,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;QAC5D,OAAO;IACT,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,gBAAM,CAAC,KAAK,CAAC,+BAA+B,EAAE,KAAK,CAAC,CAAC;QACrD,IAAA,0BAAY,EAAC,GAAG,EAAE,+BAAc,CAAC,qBAAqB,EAAE;YACtD,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,2BAA2B;SACrC,CAAC,CAAC;QACH,OAAO;IACT,CAAC;AACH,CAAC,CAAC;AA3CW,QAAA,kBAAkB,sBA2C7B;AAEK,MAAM,iBAAiB,GAAG,KAAK,EAAE,GAAyB,EAAE,GAAa,EAAE,EAAE;IAClF,MAAM,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IAC1B,gBAAM,CAAC,IAAI,CAAC,gDAAgD,EAAE,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IAChF,MAAM,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC;IAC5B,MAAM,QAAQ,GAAG,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;IAEhC,MAAM,MAAM,GAAG,oCAAuB,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC3D,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QACpB,gBAAM,CAAC,IAAI,CAAC,uCAAuC,EAAE,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QACrF,IAAA,0BAAY,EAAC,GAAG,EAAE,+BAAc,CAAC,WAAW,EAAE;YAC5C,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,6BAA6B;YACtC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO;SACtC,CAAC,CAAC;QACH,OAAO;IACT,CAAC;IAED,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC;IAC5B,IAAI,CAAC;QACH,MAAM,QAAQ,GAAG,MAAM,eAAM,CAAC,WAAW,CAAC,UAAU,CAAC;YACnD,KAAK,EAAE,EAAE,EAAE,EAAE;YACb,OAAO,EAAE,EAAE,QAAQ,EAAE,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,EAAE;SACrD,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,EAAE,CAAC;YACd,gBAAM,CAAC,IAAI,CAAC,wCAAwC,EAAE,EAAE,CAAC,CAAC;YAC1D,IAAA,0BAAY,EAAC,GAAG,EAAE,+BAAc,CAAC,SAAS,EAAE;gBAC1C,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,yBAAyB;aACnC,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QAED,MAAM,MAAM,GAAG,QAAQ,KAAK,MAAM,IAAI,QAAQ,CAAC,MAAM,KAAK,MAAM,CAAC;QACjE,MAAM,OAAO,GAAG,QAAQ,KAAK,OAAO,IAAI,QAAQ,CAAC,QAAQ,CAAC,OAAO,KAAK,MAAM,CAAC;QAC7E,IAAI,CAAC,MAAM,IAAI,CAAC,OAAO,IAAI,QAAQ,KAAK,OAAO,EAAE,CAAC;YAChD,gBAAM,CAAC,IAAI,CAAC,gDAAgD,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;YAC1E,IAAA,0BAAY,EAAC,GAAG,EAAE,+BAAc,CAAC,SAAS,EAAE;gBAC1C,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,4CAA4C;aACtD,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QAED,MAAM,OAAO,GAAG,MAAM,eAAM,CAAC,WAAW,CAAC,MAAM,CAAC;YAC9C,KAAK,EAAE,EAAE,EAAE,EAAE;YACb,IAAI,EAAE,OAAO;SACd,CAAC,CAAC;QAEH,IAAI,OAAO,CAAC,MAAM,KAAK,WAAW,EAAE,CAAC;YACnC,MAAM,iBAAiB,CAAC,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,mBAAmB,EAAE,QAAQ,CAAC,CAAC;QACrF,CAAC;QAED,gBAAM,CAAC,IAAI,CAAC,qCAAqC,EAAE,EAAE,CAAC,CAAC;QACvD,IAAA,0BAAY,EAAC,GAAG,EAAE,+BAAc,CAAC,EAAE,EAAE;YACnC,OAAO,EAAE,0BAA0B;YACnC,IAAI,EAAE,OAAO;SACd,CAAC,CAAC;QACH,OAAO;IACT,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,gBAAM,CAAC,KAAK,CAAC,8BAA8B,EAAE,KAAK,CAAC,CAAC;QACpD,IAAA,0BAAY,EAAC,GAAG,EAAE,+BAAc,CAAC,qBAAqB,EAAE;YACtD,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,6BAA6B;SACvC,CAAC,CAAC;QACH,OAAO;IACT,CAAC;AACH,CAAC,CAAC;AAlEW,QAAA,iBAAiB,qBAkE5B;AAEK,MAAM,iBAAiB,GAAG,KAAK,EAAE,GAAyB,EAAE,GAAa,EAAE,EAAE;IAClF,MAAM,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IAC1B,gBAAM,CAAC,IAAI,CAAC,gDAAgD,EAAE,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IAEhF,IAAI,CAAC;QACH,MAAM,eAAM,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACnD,gBAAM,CAAC,IAAI,CAAC,qCAAqC,EAAE,EAAE,CAAC,CAAC;QACvD,IAAA,0BAAY,EAAC,GAAG,EAAE,+BAAc,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,sBAAsB,EAAE,CAAC,CAAC;QAC1E,OAAO;IACT,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,gBAAM,CAAC,KAAK,CAAC,8BAA8B,EAAE,KAAK,CAAC,CAAC;QACpD,IAAA,0BAAY,EAAC,GAAG,EAAE,+BAAc,CAAC,qBAAqB,EAAE;YACtD,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,yBAAyB;SACnC,CAAC,CAAC;QACH,OAAO;IACT,CAAC;AACH,CAAC,CAAC;AAjBW,QAAA,iBAAiB,qBAiB5B;AAEF,KAAK,UAAU,iBAAiB,CAC9B,UAAkB,EAClB,QAAc,EACd,MAAwB;IAExB,gBAAM,CAAC,IAAI,CACT,mEAAmE,EACnE,MAAM,EACN,QAAQ,CAAC,WAAW,EAAE,EACtB,UAAU,CACX,CAAC;IAEF,MAAM,QAAQ,GAAG,MAAM,eAAM,CAAC,QAAQ,CAAC,UAAU,CAAC;QAChD,KAAK,EAAE,EAAE,EAAE,EAAE,UAAU,EAAE;QACzB,MAAM,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE;KAC9B,CAAC,CAAC;IACH,IAAI,CAAC,QAAQ,EAAE,CAAC;QACd,gBAAM,CAAC,IAAI,CAAC,iDAAiD,EAAE,UAAU,CAAC,CAAC;QAC3E,OAAO;IACT,CAAC;IAED,MAAM,YAAY,GAChB,MAAM,KAAK,KAAK;QACd,CAAC,CAAC,KAAK,CAAC,IAAI,CACR,IAAI,GAAG,CAAC;YACN,GAAG,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;YACnD,QAAQ,CAAC,WAAW,EAAE;SACvB,CAAC,CACH,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/B,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CACzB,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,QAAQ,CAAC,WAAW,EAAE,CACxD,CAAC;IAER,MAAM,eAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;QAC3B,KAAK,EAAE,EAAE,EAAE,EAAE,UAAU,EAAE;QACzB,IAAI,EAAE,EAAE,WAAW,EAAE,YAAY,EAAE;KACpC,CAAC,CAAC;IAEH,gBAAM,CAAC,IAAI,CACT,yDAAyD,EACzD,YAAY,CAAC,MAAM,CACpB,CAAC;AACJ,CAAC","sourcesContent":["import { Request, Response } from \"express\";\r\nimport { HttpStatusCode } from \"../core/enums/httpStatusCode\";\r\nimport { sendResponse } from \"../core/response/apiResponse\";\r\nimport { createReservationSchema, updateReservationSchema } from \"../validators/zodSchemas\";\r\nimport { prisma } from \"../lib/prisma\";\r\nimport { AuthenticatedRequest } from \"../middlewares/authMiddleware\";\r\nimport logger from \"../core/logger/logger\"; // ← ekledik\r\n\r\nexport const createReservation = async (req: AuthenticatedRequest, res: Response) => {\r\n  logger.info(\"createReservation çağrıldı by user %s\", req.user?.id);\r\n\r\n  const result = createReservationSchema.safeParse(req.body);\r\n  if (!result.success) {\r\n    logger.warn(\"createReservation: Geçersiz veri – %s\", result.error.errors[0].message);\r\n    sendResponse(res, HttpStatusCode.BAD_REQUEST, {\r\n      success: false,\r\n      message: \"Geçersiz rezervasyon verisi.\",\r\n      error: result.error.errors[0].message,\r\n    });\r\n    return;\r\n  }\r\n\r\n  const data = result.data;\r\n  try {\r\n    const reservation = await prisma.reservation.create({ data });\r\n\r\n    // Her durumda ekle\r\n    await updateBookedSlots(reservation.haliSahaId, reservation.reservationDateTime, \"add\");\r\n    logger.info(\"createReservation başarılı – id: %s\", reservation.id);\r\n\r\n    sendResponse(res, HttpStatusCode.CREATED, {\r\n      message: \"Rezervasyon başarıyla oluşturuldu.\",\r\n      data: reservation,\r\n    });\r\n    return;\r\n  } catch (error) {\r\n    logger.error(\"createReservation hatası: %o\", error);\r\n    sendResponse(res, HttpStatusCode.INTERNAL_SERVER_ERROR, {\r\n      success: false,\r\n      message: \"Rezervasyon oluşturulamadı.\",\r\n    });\r\n    return;\r\n  }\r\n};\r\n\r\nexport const getAllReservations = async (req: AuthenticatedRequest, res: Response) => {\r\n  logger.info(\"getAllReservations çağrıldı by user %s (role: %s)\", req.user?.id, req.user?.role);\r\n  const userId = req.user?.id;\r\n  const role = req.user?.role;\r\n\r\n  try {\r\n    let reservations;\r\n\r\n    if (role === \"USER\") {\r\n      reservations = await prisma.reservation.findMany({\r\n        where: { userId },\r\n        include: { haliSaha: true },\r\n        orderBy: { createdAt: \"desc\" },\r\n      });\r\n    } else if (role === \"OWNER\") {\r\n      reservations = await prisma.reservation.findMany({\r\n        where: { haliSaha: { ownerId: userId } },\r\n        include: { haliSaha: true },\r\n        orderBy: { createdAt: \"desc\" },\r\n      });\r\n    } else if (role === \"ADMIN\") {\r\n      reservations = await prisma.reservation.findMany({\r\n        include: { haliSaha: true },\r\n        orderBy: { createdAt: \"desc\" },\r\n      });\r\n    } else {\r\n      logger.warn(\"getAllReservations: yetkisiz erişim attempt by %s\", userId);\r\n      sendResponse(res, HttpStatusCode.FORBIDDEN, {\r\n        success: false,\r\n        message: \"Rezervasyonları görüntüleme yetkiniz yok.\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    logger.info(\"getAllReservations başarılı – count: %d\", reservations.length);\r\n    sendResponse(res, HttpStatusCode.OK, { data: reservations });\r\n    return;\r\n  } catch (error) {\r\n    logger.error(\"getAllReservations hatası: %o\", error);\r\n    sendResponse(res, HttpStatusCode.INTERNAL_SERVER_ERROR, {\r\n      success: false,\r\n      message: \"Rezervasyonlara erişilemedi.\",\r\n    });\r\n    return;\r\n  }\r\n};\r\n\r\nexport const getReservationById = async (req: AuthenticatedRequest, res: Response) => {\r\n  const { id } = req.params;\r\n  logger.info(\"getReservationById çağrıldı – id: %s by user %s\", id, req.user?.id);\r\n  const userId = req.user?.id;\r\n  const userRole = req.user?.role;\r\n\r\n  try {\r\n    const reservation = await prisma.reservation.findUnique({\r\n      where: { id },\r\n      include: { haliSaha: { select: { ownerId: true } } },\r\n    });\r\n\r\n    if (!reservation) {\r\n      logger.warn(\"getReservationById: bulunamadı – id: %s\", id);\r\n      sendResponse(res, HttpStatusCode.NOT_FOUND, {\r\n        success: false,\r\n        message: \"Rezervasyon bulunamadı.\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    const isUser = userRole === \"USER\" && reservation.userId === userId;\r\n    const isOwner = userRole === \"OWNER\" && reservation.haliSaha.ownerId === userId;\r\n    if (!isUser && !isOwner && userRole !== \"ADMIN\") {\r\n      logger.warn(\"getReservationById: yetkisiz erişim by %s on %s\", userId, id);\r\n      sendResponse(res, HttpStatusCode.FORBIDDEN, {\r\n        success: false,\r\n        message: \"Bu rezervasyona erişim yetkiniz yok.\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    logger.info(\"getReservationById başarılı – id: %s\", id);\r\n    sendResponse(res, HttpStatusCode.OK, { data: reservation });\r\n    return;\r\n  } catch (error) {\r\n    logger.error(\"getReservationById hatası: %o\", error);\r\n    sendResponse(res, HttpStatusCode.INTERNAL_SERVER_ERROR, {\r\n      success: false,\r\n      message: \"Rezervasyona erişilemedi.\",\r\n    });\r\n    return;\r\n  }\r\n};\r\n\r\nexport const updateReservation = async (req: AuthenticatedRequest, res: Response) => {\r\n  const { id } = req.params;\r\n  logger.info(\"updateReservation çağrıldı – id: %s by user %s\", id, req.user?.id);\r\n  const userId = req.user?.id;\r\n  const userRole = req.user?.role;\r\n\r\n  const result = updateReservationSchema.safeParse(req.body);\r\n  if (!result.success) {\r\n    logger.warn(\"updateReservation: Geçersiz veri – %s\", result.error.errors[0].message);\r\n    sendResponse(res, HttpStatusCode.BAD_REQUEST, {\r\n      success: false,\r\n      message: \"Geçersiz güncelleme verisi.\",\r\n      error: result.error.errors[0].message,\r\n    });\r\n    return;\r\n  }\r\n\r\n  const updates = result.data;\r\n  try {\r\n    const existing = await prisma.reservation.findUnique({\r\n      where: { id },\r\n      include: { haliSaha: { select: { ownerId: true } } },\r\n    });\r\n    if (!existing) {\r\n      logger.warn(\"updateReservation: bulunamadı – id: %s\", id);\r\n      sendResponse(res, HttpStatusCode.NOT_FOUND, {\r\n        success: false,\r\n        message: \"Rezervasyon bulunamadı.\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    const isUser = userRole === \"USER\" && existing.userId === userId;\r\n    const isOwner = userRole === \"OWNER\" && existing.haliSaha.ownerId === userId;\r\n    if (!isUser && !isOwner && userRole !== \"ADMIN\") {\r\n      logger.warn(\"updateReservation: yetkisiz erişim by %s on %s\", userId, id);\r\n      sendResponse(res, HttpStatusCode.FORBIDDEN, {\r\n        success: false,\r\n        message: \"Bu rezervasyonu güncellemeye yetkiniz yok.\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    const updated = await prisma.reservation.update({\r\n      where: { id },\r\n      data: updates,\r\n    });\r\n\r\n    if (updated.status === \"cancelled\") {\r\n      await updateBookedSlots(updated.haliSahaId, updated.reservationDateTime, \"remove\");\r\n    }\r\n\r\n    logger.info(\"updateReservation başarılı – id: %s\", id);\r\n    sendResponse(res, HttpStatusCode.OK, {\r\n      message: \"Rezervasyon güncellendi.\",\r\n      data: updated,\r\n    });\r\n    return;\r\n  } catch (error) {\r\n    logger.error(\"updateReservation hatası: %o\", error);\r\n    sendResponse(res, HttpStatusCode.INTERNAL_SERVER_ERROR, {\r\n      success: false,\r\n      message: \"Rezervasyon güncellenemedi.\",\r\n    });\r\n    return;\r\n  }\r\n};\r\n\r\nexport const deleteReservation = async (req: AuthenticatedRequest, res: Response) => {\r\n  const { id } = req.params;\r\n  logger.info(\"deleteReservation çağrıldı – id: %s by user %s\", id, req.user?.id);\r\n\r\n  try {\r\n    await prisma.reservation.delete({ where: { id } });\r\n    logger.info(\"deleteReservation başarılı – id: %s\", id);\r\n    sendResponse(res, HttpStatusCode.OK, { message: \"Rezervasyon silindi.\" });\r\n    return;\r\n  } catch (error) {\r\n    logger.error(\"deleteReservation hatası: %o\", error);\r\n    sendResponse(res, HttpStatusCode.INTERNAL_SERVER_ERROR, {\r\n      success: false,\r\n      message: \"Rezervasyon silinemedi.\",\r\n    });\r\n    return;\r\n  }\r\n};\r\n\r\nasync function updateBookedSlots(\r\n  haliSahaId: string,\r\n  slotTime: Date,\r\n  action: \"add\" | \"remove\"\r\n) {\r\n  logger.info(\r\n    \"updateBookedSlots çağrıldı – action: %s, slot: %s, haliSahaId: %s\",\r\n    action,\r\n    slotTime.toISOString(),\r\n    haliSahaId\r\n  );\r\n\r\n  const haliSaha = await prisma.haliSaha.findUnique({\r\n    where: { id: haliSahaId },\r\n    select: { bookedSlots: true },\r\n  });\r\n  if (!haliSaha) {\r\n    logger.warn(\"updateBookedSlots: haliSaha bulunamadı – id: %s\", haliSahaId);\r\n    return;\r\n  }\r\n\r\n  const updatedSlots =\r\n    action === \"add\"\r\n      ? Array.from(\r\n          new Set([\r\n            ...haliSaha.bookedSlots.map((d) => d.toISOString()),\r\n            slotTime.toISOString(),\r\n          ])\r\n        ).map((str) => new Date(str))\r\n      : haliSaha.bookedSlots.filter(\r\n          (slot) => slot.toISOString() !== slotTime.toISOString()\r\n        );\r\n\r\n  await prisma.haliSaha.update({\r\n    where: { id: haliSahaId },\r\n    data: { bookedSlots: updatedSlots },\r\n  });\r\n\r\n  logger.info(\r\n    \"updateBookedSlots başarılı – yeni bookedSlots count: %d\",\r\n    updatedSlots.length\r\n  );\r\n}\r\n"]}