{"version":3,"file":"reviewController.js","sourceRoot":"","sources":["../../src/controllers/reviewController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\r\nimport { prisma } from \"../lib/prisma\";\r\nimport { HttpStatusCode } from \"../core/enums/httpStatusCode\";\r\nimport { sendResponse } from \"../core/response/apiResponse\";\r\nimport { createReviewSchema, updateReviewSchema } from \"../validators/zodSchemas\";\r\nimport { AuthenticatedRequest } from \"../middlewares/authMiddleware\";\r\nimport logger from \"../core/logger/logger\"; // ← logger eklendi\r\n\r\n/**\r\n * Bir halı sahanın ortalama puanını ve toplam yorum sayısını hesaplayıp\r\n * veritabanında güncelleyen yardımcı fonksiyon.\r\n */\r\nconst updateHaliSahaStats = async (haliSahaId: string) => {\r\n  try {\r\n    const stats = await prisma.review.aggregate({\r\n      where: { haliSahaId },\r\n      _count: { _all: true },\r\n      _avg: { rating: true },\r\n    });\r\n\r\n    const reviewCount = stats._count._all || 0;\r\n    const newRating = stats._avg.rating\r\n      ? parseFloat(stats._avg.rating.toFixed(1))\r\n      : 0;\r\n\r\n    await prisma.haliSaha.update({\r\n      where: { id: haliSahaId },\r\n      data: {\r\n        reviewCount,\r\n        rating: newRating,\r\n      },\r\n    });\r\n\r\n    logger.info(\"updateHaliSahaStats başarılı – haliSahaId: %s, count: %d, rating: %f\",\r\n      haliSahaId, reviewCount, newRating);\r\n\r\n  } catch (error) {\r\n    logger.error(\"updateHaliSahaStats hatası – haliSahaId: %s: %o\", haliSahaId, error);\r\n  }\r\n};\r\n\r\nexport const createReview = async (req: AuthenticatedRequest, res: Response) => {\r\n  logger.info(\"createReview çağrıldı by user %s\", req.user?.id);\r\n\r\n  const result = createReviewSchema.safeParse(req.body);\r\n  if (!result.success) {\r\n    logger.warn(\"createReview: validation failed – %s\", result.error.errors[0].message);\r\n    sendResponse(res, HttpStatusCode.BAD_REQUEST, {\r\n      success: false,\r\n      message: \"Geçersiz yorum verisi.\",\r\n      error: result.error.errors[0].message,\r\n    });\r\n    return;\r\n  }\r\n\r\n  const data = result.data;\r\n  try {\r\n    const review = await prisma.review.create({ data });\r\n\r\n    await updateHaliSahaStats(review.haliSahaId);\r\n\r\n    logger.info(\"createReview başarılı – id: %s\", review.id);\r\n    sendResponse(res, HttpStatusCode.CREATED, {\r\n      message: \"Yorum başarıyla oluşturuldu.\",\r\n      data: review,\r\n    });\r\n    return;\r\n  } catch (error) {\r\n    logger.error(\"createReview hatası: %o\", error);\r\n    sendResponse(res, HttpStatusCode.INTERNAL_SERVER_ERROR, {\r\n      success: false,\r\n      message: \"Yorum oluşturulamadı.\",\r\n    });\r\n    return;\r\n  }\r\n};\r\n\r\nexport const getAllReviews = async (req: Request, res: Response) => {\r\n  logger.info(\"getAllReviews çağrıldı\");\r\n\r\n  try {\r\n    const reviews = await prisma.review.findMany({\r\n      include: { user: true },\r\n      orderBy: { createdAt: \"desc\" },\r\n    });\r\n    logger.info(\"getAllReviews başarılı – count: %d\", reviews.length);\r\n    sendResponse(res, HttpStatusCode.OK, { data: reviews });\r\n    return;\r\n  } catch (error) {\r\n    logger.error(\"getAllReviews hatası: %o\", error);\r\n    sendResponse(res, HttpStatusCode.INTERNAL_SERVER_ERROR, {\r\n      success: false,\r\n      message: \"Yorumlara erişilemedi.\",\r\n    });\r\n    return;\r\n  }\r\n};\r\n\r\nexport const getReviewById = async (req: Request, res: Response) => {\r\n  const { id } = req.params;\r\n  logger.info(\"getReviewById çağrıldı – id: %s\", id);\r\n\r\n  try {\r\n    const review = await prisma.review.findUnique({ where: { id } });\r\n    if (!review) {\r\n      logger.warn(\"getReviewById: bulunamadı – id: %s\", id);\r\n      sendResponse(res, HttpStatusCode.NOT_FOUND, {\r\n        success: false,\r\n        message: \"Yorum bulunamadı.\",\r\n      });\r\n      return;\r\n    }\r\n    logger.info(\"getReviewById başarılı – id: %s\", id);\r\n    sendResponse(res, HttpStatusCode.OK, { data: review });\r\n    return;\r\n  } catch (error) {\r\n    logger.error(\"getReviewById hatası: %o\", error);\r\n    sendResponse(res, HttpStatusCode.INTERNAL_SERVER_ERROR, {\r\n      success: false,\r\n      message: \"Yoruma erişilemedi.\",\r\n    });\r\n    return;\r\n  }\r\n};\r\n\r\nexport const updateReview = async (req: AuthenticatedRequest, res: Response) => {\r\n  const { id } = req.params;\r\n  logger.info(\"updateReview çağrıldı – id: %s by user %s\", id, req.user?.id);\r\n\r\n  const result = updateReviewSchema.safeParse(req.body);\r\n  if (!result.success) {\r\n    logger.warn(\"updateReview: validation failed – %s\", result.error.errors[0].message);\r\n    sendResponse(res, HttpStatusCode.BAD_REQUEST, {\r\n      success: false,\r\n      message: \"Geçersiz güncelleme verisi.\",\r\n      error: result.error.errors[0].message,\r\n    });\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const existingReview = await prisma.review.findUnique({ where: { id } });\r\n    if (!existingReview) {\r\n      logger.warn(\"updateReview: bulunamadı – id: %s\", id);\r\n      sendResponse(res, HttpStatusCode.NOT_FOUND, {\r\n        success: false,\r\n        message: \"Yorum bulunamadı.\",\r\n      });\r\n      return;\r\n    }\r\n    if (existingReview.userId !== req.user?.id && req.user?.role !== \"ADMIN\") {\r\n      logger.warn(\"updateReview: yetkisiz erişim by %s on %s\", req.user?.id, id);\r\n      sendResponse(res, HttpStatusCode.FORBIDDEN, {\r\n        success: false,\r\n        message: \"Bu yorumu güncellemeye yetkiniz yok.\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    const updated = await prisma.review.update({\r\n      where: { id },\r\n      data: result.data,\r\n    });\r\n    await updateHaliSahaStats(updated.haliSahaId);\r\n\r\n    logger.info(\"updateReview başarılı – id: %s\", id);\r\n    sendResponse(res, HttpStatusCode.OK, {\r\n      message: \"Yorum başarıyla güncellendi.\",\r\n      data: updated,\r\n    });\r\n    return;\r\n  } catch (error) {\r\n    logger.error(\"updateReview hatası: %o\", error);\r\n    sendResponse(res, HttpStatusCode.INTERNAL_SERVER_ERROR, {\r\n      success: false,\r\n      message: \"Yorum güncellenemedi.\",\r\n    });\r\n    return;\r\n  }\r\n};\r\n\r\nexport const deleteReview = async (req: AuthenticatedRequest, res: Response) => {\r\n  const { id } = req.params;\r\n  logger.info(\"deleteReview çağrıldı – id: %s by user %s\", id, req.user?.id);\r\n\r\n  try {\r\n    const review = await prisma.review.findUnique({ where: { id } });\r\n    if (!review) {\r\n      logger.warn(\"deleteReview: bulunamadı – id: %s\", id);\r\n      sendResponse(res, HttpStatusCode.NOT_FOUND, {\r\n        success: false,\r\n        message: \"Silinecek yorum bulunamadı.\",\r\n      });\r\n      return;\r\n    }\r\n    if (review.userId !== req.user?.id && req.user?.role !== \"ADMIN\") {\r\n      logger.warn(\"deleteReview: yetkisiz erişim by %s on %s\", req.user?.id, id);\r\n      sendResponse(res, HttpStatusCode.FORBIDDEN, {\r\n        success: false,\r\n        message: \"Bu yorumu silmeye yetkiniz yok.\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    await prisma.review.delete({ where: { id } });\r\n    await updateHaliSahaStats(review.haliSahaId);\r\n\r\n    logger.info(\"deleteReview başarılı – id: %s\", id);\r\n    sendResponse(res, HttpStatusCode.OK, { message: \"Yorum silindi.\" });\r\n    return;\r\n  } catch (error) {\r\n    logger.error(\"deleteReview hatası: %o\", error);\r\n    sendResponse(res, HttpStatusCode.INTERNAL_SERVER_ERROR, {\r\n      success: false,\r\n      message: \"Yorum silinemedi.\",\r\n    });\r\n    return;\r\n  }\r\n};\r\n"]}