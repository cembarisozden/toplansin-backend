{"version":3,"file":"logger.js","sourceRoot":"","sources":["../../../src/core/logger/logger.ts"],"names":[],"mappings":";;;;;AAAA,qCAA2D;AAC3D,0FAAwD;AAExD,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,gBAAM,CAAC;AAEtE,iCAAiC;AACjC,MAAM,YAAY,GAAG,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE;IACnE,OAAO,GAAG,SAAS,KAAK,KAAK,MAAM,KAAK,IAAI,OAAO,EAAE,CAAC;AACxD,CAAC,CAAC,CAAC;AAEH,MAAM,MAAM,GAAG,IAAA,sBAAY,EAAC;IAC1B,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS,IAAI,MAAM;IACtC,MAAM,EAAE,OAAO,CACb,SAAS,CAAC,EAAE,MAAM,EAAE,qBAAqB,EAAE,CAAC,EAC5C,MAAM,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAK,8CAA8C;IAC1E,IAAI,EAAE,CAAsB,sBAAsB;KACnD;IACD,UAAU,EAAE;QACV,iCAAiC;QACjC,IAAI,oBAAU,CAAC,IAAI,CAAC;YAClB,QAAQ,EAAE,gBAAgB;YAC1B,KAAK,EAAE,OAAO;YACd,OAAO,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI,EAAK,OAAO;YACpC,QAAQ,EAAE,CAAC;SACZ,CAAC;QACF,+BAA+B;QAC/B,IAAI,oBAAU,CAAC,IAAI,CAAC;YAClB,QAAQ,EAAE,mBAAmB;YAC7B,OAAO,EAAE,EAAE,GAAG,IAAI,GAAG,IAAI,EAAI,QAAQ;YACrC,QAAQ,EAAE,CAAC;SACZ,CAAC;QACF,sCAAsC;QACtC,IAAI,mCAAe,CAAC;YAClB,QAAQ,EAAE,qBAAqB;YAC/B,WAAW,EAAE,YAAY;YACzB,QAAQ,EAAE,KAAK;YACf,aAAa,EAAE,IAAI;SACpB,CAAC;KACH;CACF,CAAC,CAAC;AAEH,4CAA4C;AAC5C,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE,CAAC;IAC1C,MAAM,CAAC,GAAG,CAAC,IAAI,oBAAU,CAAC,OAAO,CAAC;QAChC,MAAM,EAAE,OAAO,CACb,QAAQ,EAAE,EACV,SAAS,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,EACjC,YAAY,CACb;KACF,CAAC,CAAC,CAAC;AACN,CAAC;AAED,kBAAe,MAAM,CAAC","sourcesContent":["import { createLogger, format, transports } from 'winston';\r\nimport DailyRotateFile from 'winston-daily-rotate-file';\r\n\r\nconst { combine, timestamp, printf, errors, json, colorize } = format;\r\n\r\n// 1️⃣ Özel format (isteğe bağlı)\r\nconst customFormat = printf(({ level, message, timestamp, stack }) => {\r\n  return `${timestamp} [${level}]: ${stack ?? message}`;\r\n});\r\n\r\nconst logger = createLogger({\r\n  level: process.env.LOG_LEVEL || 'info',\r\n  format: combine(\r\n    timestamp({ format: 'YYYY-MM-DD HH:mm:ss' }),\r\n    errors({ stack: true }),    // `error` nesnelerinin stack trace’ini de yaz\r\n    json()                      // JSON formatta logla\r\n  ),\r\n  transports: [\r\n    // Hata loglarını bir dosyaya yaz\r\n    new transports.File({\r\n      filename: 'logs/error.log',\r\n      level: 'error',\r\n      maxsize: 5 * 1024 * 1024,    // 5 MB\r\n      maxFiles: 5,\r\n    }),\r\n    // Tüm seviyeler için bir dosya\r\n    new transports.File({\r\n      filename: 'logs/combined.log',\r\n      maxsize: 10 * 1024 * 1024,   // 10 MB\r\n      maxFiles: 5,\r\n    }),\r\n    // Günlük rotasyonlu dosya (opsiyonel)\r\n    new DailyRotateFile({\r\n      filename: 'logs/app-%DATE%.log',\r\n      datePattern: 'YYYY-MM-DD',\r\n      maxFiles: '14d',\r\n      zippedArchive: true,\r\n    })\r\n  ]\r\n});\r\n\r\n// 2️⃣ Geliştirme ortamında console’a da yaz\r\nif (process.env.NODE_ENV !== 'production') {\r\n  logger.add(new transports.Console({\r\n    format: combine(\r\n      colorize(),\r\n      timestamp({ format: 'HH:mm:ss' }),\r\n      customFormat\r\n    )\r\n  }));\r\n}\r\n\r\nexport default logger;\r\n"]}