{"version":3,"file":"jwt.js","sourceRoot":"","sources":["../../src/utils/jwt.ts"],"names":[],"mappings":";;;;;AAiBA,8BAEC;AAGD,kCAaC;AAnCD,gEAAoE;AACpE,oDAA4B;AAC5B,gBAAM,CAAC,MAAM,EAAE,CAAC;AAEhB,MAAM,MAAM,GAAW,OAAO,CAAC,GAAG,CAAC,UAAoB,CAAC;AACxD,MAAM,SAAS,GAAY,OAAO,CAAC,GAAG,CAAC,cAAwB,IAAI,IAAI,CAAC;AAExE,IAAI,CAAC,MAAM,EAAE,CAAC;IACZ,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;AAC7D,CAAC;AAED,MAAM,OAAO,GAAG;IACd,SAAS,EAAE,SAAS,EAAE,4BAA4B;IAClD,SAAS,EAAE,OAAO;CACJ,CAAC;AAEjB,gBAAgB;AAChB,SAAgB,SAAS,CAAC,OAAe;IACvC,OAAO,sBAAG,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;AAC5C,CAAC;AAED,kBAAkB;AAClB,SAAgB,WAAW,CAAC,KAAa;IACvC,IAAI,CAAC;QACH,OAAO,sBAAG,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACnC,CAAC;IAAC,OAAO,GAAQ,EAAE,CAAC;QAClB,yCAAyC;QACzC,IAAI,GAAG,CAAC,IAAI,KAAK,mBAAmB,EAAE,CAAC;YACrC,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;QACzC,CAAC;QACD,IAAI,GAAG,CAAC,IAAI,KAAK,mBAAmB,EAAE,CAAC;YACrC,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;QACpC,CAAC;QACD,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;IACzC,CAAC;AACH,CAAC","sourcesContent":["import jwt, { Secret, SignOptions, JwtPayload } from \"jsonwebtoken\";\r\nimport dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\nconst secret: Secret = process.env.JWT_SECRET as Secret;\r\nconst expiresIn : string = process.env.JWT_EXPIRES_IN as string || \"7d\";\r\n\r\nif (!secret) {\r\n  throw new Error(\"JWT_SECRET .env dosyasında tanımlanmalı\");\r\n}\r\n\r\nconst options = {\r\n  expiresIn: expiresIn, // bu string aslında geçerli\r\n  algorithm: \"HS256\",\r\n} as SignOptions;\r\n\r\n// Token üretimi\r\nexport function signToken(payload: object): string {\r\n  return jwt.sign(payload, secret, options);\r\n}\r\n\r\n// Token doğrulama\r\nexport function verifyToken(token: string): JwtPayload | string {\r\n  try {\r\n    return jwt.verify(token, secret);\r\n  } catch (err: any) {\r\n    // Daha detaylı hata analizi yapabilirsin\r\n    if (err.name === \"TokenExpiredError\") {\r\n      throw new Error(\"Token süresi dolmuş\");\r\n    }\r\n    if (err.name === \"JsonWebTokenError\") {\r\n      throw new Error(\"Token geçersiz\");\r\n    }\r\n    throw new Error(\"Token doğrulanamadı\");\r\n  }\r\n}\r\n"]}