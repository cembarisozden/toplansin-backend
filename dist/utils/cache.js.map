{"version":3,"file":"cache.js","sourceRoot":"","sources":["../../src/utils/cache.ts"],"names":[],"mappings":";;;;;;AAAA,4DAAmC;AAEtB,QAAA,KAAK,GAAG,IAAI,oBAAS,CAAC;IACjC,MAAM,EAAE,EAAE,EAAW,0BAA0B;IAC/C,WAAW,EAAE,GAAG,EAAK,0BAA0B;CAChD,CAAC,CAAC;AAGI,MAAM,YAAY,GAAG,KAAK,EAC/B,GAAW,EACX,GAAW,EACX,OAAyB,EACb,EAAE;IACd,MAAM,MAAM,GAAG,aAAK,CAAC,GAAG,CAAI,GAAG,CAAC,CAAC;IACjC,IAAI,MAAM;QAAE,OAAO,MAAM,CAAC;IAE1B,MAAM,IAAI,GAAG,MAAM,OAAO,EAAE,CAAC;IAC7B,aAAK,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;IAC1B,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAXW,QAAA,YAAY,gBAWvB;AAEK,MAAM,UAAU,GAAG,CAAC,GAAW,EAAE,EAAE;IACxC,aAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACjB,CAAC,CAAC;AAFW,QAAA,UAAU,cAErB","sourcesContent":["import NodeCache from \"node-cache\";\r\n\r\nexport const cache = new NodeCache({\r\n  stdTTL: 60,          // Varsayılan TTL (saniye)\r\n  checkperiod: 120,    // Temizlik kontrol süresi\r\n});\r\n\r\n\r\nexport const cacheOrFetch = async <T>(\r\n  key: string,\r\n  ttl: number,\r\n  fetchFn: () => Promise<T>\r\n): Promise<T> => {\r\n  const cached = cache.get<T>(key);\r\n  if (cached) return cached;\r\n\r\n  const data = await fetchFn();\r\n  cache.set(key, data, ttl);\r\n  return data;\r\n};\r\n\r\nexport const clearCache = (key: string) => {\r\n  cache.del(key);\r\n};"]}